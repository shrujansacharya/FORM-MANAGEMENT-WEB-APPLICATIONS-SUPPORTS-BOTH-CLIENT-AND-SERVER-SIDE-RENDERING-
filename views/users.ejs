<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>All Users</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Google Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <!-- Poppins font -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap" rel="stylesheet"/>

  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(120deg, #f7f9fc, #eef5ff);
      padding-bottom: 90px; /* space for bottom nav */
    }

    .container {
      max-width: 1200px;
      margin: auto;
      padding: 2rem;
    }

    .table-responsive {
      margin-top: 1rem;
    }

    .pagination {
      justify-content: center;
      margin-top: 1rem;
    }

    .bottom-nav {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background-color: #2563eb;
      display: flex;
      justify-content: space-around;
      align-items: center;
      height: 70px;
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.15);
      z-index: 1000;
      transition: transform 0.3s ease;
    }

    .bottom-nav a {
      color: white;
      text-decoration: none;
      font-size: 0.85rem;
      font-weight: 500;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      transition: transform 0.2s ease, color 0.3s ease;
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.5s ease forwards;
    }

    .bottom-nav a:nth-child(1) { animation-delay: 0.1s; }
    .bottom-nav a:nth-child(2) { animation-delay: 0.2s; }
    .bottom-nav a:nth-child(3) { animation-delay: 0.3s; }
    .bottom-nav a:nth-child(4) { animation-delay: 0.4s; }
    .bottom-nav a:nth-child(5) { animation-delay: 0.5s; }
    .bottom-nav a:nth-child(6) { animation-delay: 0.6s; }

    .bottom-nav a:hover {
      transform: scale(1.1) translateY(-5px);
      color: #bbf7d0; /* Light green on hover */
    }

    .material-icons {
      font-size: 24px;
      margin-bottom: 0.2rem;
    }

    .search-bar {
      margin-bottom: 1rem;
      opacity: 0;
      transform: scale(0.95);
      animation: slideInFade 0.5s ease forwards;
    }

    #searchInput:focus {
      box-shadow: 0 0 5px rgba(37, 99, 235, 0.5);
      transition: box-shadow 0.3s ease;
    }

    #userTable tr {
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.5s ease forwards;
    }

    #userTable tr:nth-child(1) { animation-delay: 0.1s; }
    #userTable tr:nth-child(2) { animation-delay: 0.2s; }
    #userTable tr:nth-child(3) { animation-delay: 0.3s; }
    #userTable tr:nth-child(4) { animation-delay: 0.4s; }
    #userTable tr:nth-child(5) { animation-delay: 0.5s; }
    #userTable tr:nth-child(6) { animation-delay: 0.6s; }
    #userTable tr:nth-child(7) { animation-delay: 0.7s; }
    #userTable tr:nth-child(8) { animation-delay: 0.8s; }
    #userTable tr:nth-child(9) { animation-delay: 0.9s; }
    #userTable tr:nth-child(10) { animation-delay: 1.0s; }

    .pagination .page-item {
      opacity: 0;
      transform: translateX(-20px);
      animation: slideIn 0.5s ease forwards;
    }

    .pagination .page-item:nth-child(1) { animation-delay: 0.1s; }
    .pagination .page-item:nth-child(2) { animation-delay: 0.2s; }
    .pagination .page-item:nth-child(3) { animation-delay: 0.3s; }
    .pagination .page-item:nth-child(4) { animation-delay: 0.4s; }
    .pagination .page-item:nth-child(5) { animation-delay: 0.5s; }

    #loading {
      opacity: 0;
      animation: fadeInSpin 1s ease infinite;
    }

    #loading .spinner-border {
      animation: spin 1s linear infinite;
    }

    h1 {
      opacity: 0;
      transform: scale(0.9);
      animation: scaleInFade 0.5s ease forwards;
    }

    .d-flex .btn-danger {
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .d-flex .btn-danger:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 8px rgba(220, 53, 69, 0.3);
      animation: pulse 0.5s ease;
    }

    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes slideIn {
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    @keyframes slideInFade {
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    @keyframes fadeInSpin {
      0% { opacity: 0; }
      50% { opacity: 1; }
      100% { opacity: 0; }
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    @keyframes scaleInFade {
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1.05); }
      50% { transform: scale(1.1); }
    }

    @media (max-width: 768px) {
      .container {
        padding: 1rem;
      }
      .bottom-nav {
        height: 60px;
      }
      .bottom-nav a {
        font-size: 0.75rem;
      }
      .material-icons {
        font-size: 20px;
      }
      h1 {
        font-size: 1.5rem;
      }
      .d-flex .btn-danger {
        font-size: 0.9rem;
      }
    }
  </style>
</head>
<body>

  <div class="container">
    <h1 class="text-center mb-4">üìã All Users</h1>

    <div id="loading" class="text-center">
      <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
    </div>

    <div class="search-bar">
      <input type="text" id="searchInput" class="form-control" placeholder="Search by name..." onkeyup="fetchUsers()">
    </div>

    <div class="d-flex justify-content-end mb-3">
      <a href="/delete-all" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete all users?')">üóëÔ∏è Delete All Users</a>
    </div>

    <div class="table-responsive">
      <table class="table table-striped table-bordered">
        <thead>
          <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Date of Birth</th>
            <th>Contact</th>
            <th>State</th>
            <th>Country</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="userTable">
          <!-- Populated by JavaScript -->
        </tbody>
      </table>
    </div>

    <nav aria-label="Page navigation">
      <ul class="pagination" id="pagination">
        <!-- Populated by JavaScript -->
      </ul>
    </nav>
  </div>

  <!-- ‚úÖ Bottom Navigation -->
  <div class="bottom-nav">
    <a href="/">
      <span class="material-icons">home</span>
      <span>Home</span>
    </a>
    <a href="/create">
      <span class="material-icons">add_circle</span>
      <span>Create</span>
    </a>
    <a href="/dashboard">
      <span class="material-icons">dashboard</span>
      <span>Dashboard</span>
    </a>
    <a href="/export">
      <span class="material-icons">file_download</span>
      <span>CSV</span>
    </a>
    <a href="/api/users">
      <span class="material-icons">code</span>
      <span>JSON</span>
    </a>
    <a href="/logout">
      <span class="material-icons">logout</span>
      <span>Logout</span>
    </a>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    async function fetchUsers() {
      document.getElementById('loading').style.display = 'block';
      try {
        const urlParams = new URLSearchParams(window.location.search);
        const page = urlParams.get('page') || 1;
        const searchInput = document.getElementById('searchInput').value.trim();
        const searchParam = searchInput ? `&search=${encodeURIComponent(searchInput)}` : '';
        const response = await fetch(`/api/users?page=${page}${searchParam}`);
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status} - ${response.statusText}`);
        }
        const data = await response.json();
        if (!Array.isArray(data.users) || typeof data.totalPages !== 'number' || typeof data.page !== 'number') {
          throw new Error('Invalid response format from server');
        }
        const tbody = document.getElementById('userTable');
        const pagination = document.getElementById('pagination');
        tbody.innerHTML = '';
        pagination.innerHTML = '';

        data.users.forEach(user => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${user.name || 'N/A'}</td>
            <td>${user.email || 'N/A'}</td>
            <td>${user.dob ? new Date(user.dob).toLocaleDateString() : 'N/A'}</td>
            <td>${user.contact || 'N/A'}</td>
            <td>${user.state || 'N/A'}</td>
            <td>${user.country || 'N/A'}</td>
            <td>
              <a href="/edit/${user._id}" class="btn btn-sm btn-primary">‚úèÔ∏è Edit</a>
              <a href="/delete/${user._id}" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?')">üóëÔ∏è Delete</a>
            </td>
          `;
          tbody.appendChild(row);
        });

        // Update pagination
        if (data.page > 1) {
          const prev = document.createElement('li');
          prev.className = 'page-item';
          prev.innerHTML = `<a class="page-link" href="?page=${data.page - 1}${searchParam ? '&search=' + encodeURIComponent(searchInput) : ''}">Previous</a>`;
          pagination.appendChild(prev);
        }
        for (let i = 1; i <= data.totalPages; i++) {
          const li = document.createElement('li');
          li.className = `page-item ${data.page === i ? 'active' : ''}`;
          li.innerHTML = `<a class="page-link" href="?page=${i}${searchParam ? '&search=' + encodeURIComponent(searchInput) : ''}">${i}</a>`;
          pagination.appendChild(li);
        }
        if (data.page < data.totalPages) {
          const next = document.createElement('li');
          next.className = 'page-item';
          next.innerHTML = `<a class="page-link" href="?page=${data.page + 1}${searchParam ? '&search=' + encodeURIComponent(searchInput) : ''}">Next</a>`;
          pagination.appendChild(next);
        }

        document.getElementById('loading').style.display = 'none';
      } catch (err) {
        console.error('Error fetching users:', err.message);
        if (err.message.includes('HTTP error')) {
          console.error('Server response:', await err.response?.text());
        }
        document.getElementById('loading').style.display = 'none';
        alert('Failed to fetch users. Please try again or check the server.');
      }
    }

    // Initial load and search trigger
    window.onload = fetchUsers;
    document.getElementById('searchInput').addEventListener('search', fetchUsers); // Trigger on search clear
  </script>
</body>
</html>