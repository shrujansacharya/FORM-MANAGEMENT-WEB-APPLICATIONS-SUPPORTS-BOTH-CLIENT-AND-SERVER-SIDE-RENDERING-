<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>User Submission Portal</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(145deg, #2a2a72, #009ffd);
      color: #ffffff;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      overflow-x: hidden;
      position: relative;
    }
    body::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, rgba(0, 0, 0, 0.2) 100%);
      z-index: 0;
    }
    .header-section {
      padding: 2rem 1.5rem;
      text-align: center;
      background: linear-gradient(90deg, #009ffd, #2a2a72);
      z-index: 1;
      animation: fadeIn 1s ease-in;
      width: 100%;
    }
    .header-section h1 {
      font-size: 2.25rem;
      font-weight: 800;
      color: #ffffff;
      margin-bottom: 0.75rem;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    .header-section p {
      font-size: 1.25rem;
      font-weight: 500;
      color: #e5e7eb;
      margin-bottom: 1.5rem;
    }
    .header-section .btn-primary {
      background: linear-gradient(90deg, #7e22ce, #d63384);
      border: none;
      padding: 0.75rem 1.2rem;
      font-size: 1rem;
      font-weight: 600;
      border-radius: 8px;
      transition: all 0.3s ease;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      width: auto;
      display: inline-block;
      position: relative;
      overflow: hidden;
      animation: pulse 2s infinite ease-in-out;
    }
    @keyframes pulse {
      0% {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      }
      50% {
        box-shadow: 0 6px 20px rgba(126, 34, 206, 0.4), 0 0 20px rgba(214, 51, 132, 0.3);
      }
      100% {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      }
    }
    .header-section .btn-primary::before {
      content: '';
      position: absolute;
      top: 0;
      left: -150%;
      width: 150%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.5), transparent);
      transition: left 0.5s ease;
    }
    .header-section .btn-primary:hover::before {
      left: 150%;
    }
    .header-section .btn-primary:hover {
      transform: translateY(-3px) scale(1.05);
      box-shadow: 0 8px 20px rgba(126, 34, 206, 0.5), 0 0 25px rgba(214, 51, 132, 0.4);
      background: linear-gradient(90deg, #d63384, #7e22ce);
    }
    .header-section .btn-primary:active {
      transform: translateY(0) scale(0.98);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    }
    .form-wrapper {
      width: 100%;
      max-width: 600px;
      padding: 2rem 1.5rem;
      z-index: 1;
      animation: scaleIn 0.7s ease-out;
    }
    @keyframes scaleIn {
      from {
        transform: scale(0.95) translateY(20px);
        opacity: 0;
      }
      to {
        transform: scale(1) translateY(0);
        opacity: 1;
      }
    }
    form {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }
    .form-label {
      font-weight: 600;
      font-size: 1.1rem;
      color: #f3f4f6;
      margin-bottom: 0.5rem;
      transition: color 0.3s ease;
    }
    .form-control {
      border-radius: 10px;
      border: 1px solid rgba(255, 255, 255, 0.3);
      background: #ffffff;
      color: #1f2937;
      padding: 1rem;
      font-size: 1rem;
      font-weight: 500;
      transition: all 0.3s ease;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    }
    .form-control:focus {
      border-color: #a78bfa;
      box-shadow: 0 0 0 4px rgba(167, 139, 250, 0.25), 0 4px 12px rgba(0, 0, 0, 0.15);
      background: #ffffff;
      outline: none;
    }
    .form-control::placeholder {
      color: #6b7280;
      font-weight: 400;
    }
    .btn-primary {
      background: linear-gradient(90deg, #7e22ce, #d63384);
      border: none;
      padding: 1rem;
      font-size: 1.1rem;
      font-weight: 600;
      border-radius: 10px;
      transition: all 0.3s ease;
      width: 100%;
      position: relative;
      overflow: hidden;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
    .btn-primary::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
      transition: 0.6s;
    }
    .btn-primary:hover::before {
      left: 100%;
    }
    .btn-primary:hover {
      transform: translateY(-3px);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.25);
      background: linear-gradient(90deg, #d63384, #7e22ce);
    }
    .btn-outline-primary {
      border: 1px solid #7e22ce;
      color: #ffffff;
      background: linear-gradient(90deg, #7e22ce, #d63384);
      font-weight: 600;
      padding: 1rem;
      font-size: 1.1rem;
      border-radius: 10px;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }
    .btn-outline-primary::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: 0.6s;
    }
    .btn-outline-primary:hover::before {
      left: 100%;
    }
    .btn-outline-primary:hover {
      background: linear-gradient(90deg, #d63384, #7e22ce);
      color: #ffffff;
      transform: translateY(-3px);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.25);
    }
    .alert {
      border-radius: 10px;
      padding: 1rem;
      margin-bottom: 2rem;
      background: rgba(239, 68, 68, 0.9);
      color: #ffffff;
      border: none;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
      animation: slideInRight 0.5s ease-out;
    }
    .success-message {
      color: #22c55e;
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 1.5rem;
      text-align: center;
      animation: slideInDown 0.6s ease-out;
    }
    .error-message {
      color: #f87171;
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 1.5rem;
      text-align: center;
      animation: slideInDown 0.6s ease-out;
    }
    @keyframes slideInDown {
      from {
        transform: translateY(-20px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }
    @keyframes slideInRight {
      from { transform: translateX(20px); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
    #strengthBar {
      height: 6px;
      border-radius: 3px;
      margin-top: 0.5rem;
      transition: width 0.3s ease, background 0.3s ease;
    }
    .password-weak { background: #ef4444; width: 33%; }
    .password-medium { background: #f97316; width: 66%; }
    .password-strong { background: #22c55e; width: 100%; }
    .password-strength-message {
      font-size: 0.9rem;
      font-weight: 500;
      margin-top: 0.25rem;
    }
    .footer-section {
      padding: 2rem 0;
      text-align: center;
      color: #d1d5db;
      font-size: 1rem;
      z-index: 1;
      margin-top: auto;
    }
    .nav {
      display: flex;
      justify-content: center;
      gap: 2rem;
      margin-top: 1rem;
    }
    .nav a {
      text-decoration: none;
      color: #d1d5db;
      font-weight: 600;
      font-size: 1rem;
      transition: color 0.3s ease, transform 0.3s ease;
      position: relative;
    }
    .nav a::after {
      content: '';
      position: absolute;
      width: 0;
      height: 2px;
      bottom: -4px;
      left: 0;
      background-color: #a78bfa;
      transition: width 0.3s ease;
    }
    .nav a:hover::after {
      width: 100%;
    }
    .nav a:hover {
      color: #a78bfa;
      transform: translateY(-2px);
    }
    .invalid-feedback {
      font-size: 0.9rem;
      color: #f87171;
      font-weight: 500;
      animation: fadeIn 0.5s ease-in;
    }
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
    @media (max-width: 576px) {
      .header-section {
        padding: 1.5rem 1rem;
      }
      .header-section h1 {
        font-size: 1.75rem;
      }
      .header-section p {
        font-size: 1rem;
      }
      .form-wrapper {
        padding: 1.5rem 1rem;
      }
      .form-control {
        padding: 0.875rem;
      }
      .btn-primary, .btn-outline-primary {
        padding: 0.875rem;
        font-size: 1rem;
      }
    }
  </style>
</head>
<body>
  <div class="header-section">
    <h1>User Submission Portal</h1>
    <p>Submit your information securely</p>
    <div class="text-center">
      <a href="/about" class="btn btn-primary explore-btn">Explore Now</a>
    </div>
  </div>

  <div class="form-wrapper">
    <% if (error) { %>
      <div class="alert alert-danger"><%= error %></div>
    <% } %>

    <% if (success) { %>
      <div class="success-message"><%= success %></div>
      <script>
        setTimeout(() => {
          document.forms["userForm"].reset();
        }, 100);
      </script>
    <% } %>

    <% if (validationMessage) { %>
      <div class="<%= validationMessage.includes('validated') ? 'success-message' : 'error-message' %>">
        <%= validationMessage %>
      </div>
    <% } %>

    <form name="userForm" onsubmit="return validateForm()" method="POST" action="/submit" class="needs-validation" novalidate>
      <div>
        <label for="name" class="form-label">Full Name</label>
        <input type="text" name="name" id="name" class="form-control" placeholder="Enter full name" required>
        <small id="namePreview" class="text-muted"></small>
        <div class="invalid-feedback">Name is required.</div>
      </div>

      <div>
        <label for="email" class="form-label">Email Address</label>
        <input type="email" name="email" id="email" class="form-control" placeholder="Enter email address" required oninput="validateEmailRealTime(this.value)">
        <div id="emailValidationError" class="invalid-feedback"></div>
        <div class="invalid-feedback">Valid email is required.</div>
      </div>

      <div>
        <label for="dob" class="form-label">Date of Birth</label>
        <input type="date" name="dob" id="dob" class="form-control" required>
        <div class="invalid-feedback">Please enter a valid date of birth.</div>
      </div>

      <div>
        <label for="contact" class="form-label">Contact Number</label>
        <input type="tel" name="contact" id="contact" class="form-control" placeholder="Enter 10-digit number" pattern="[0-9]{10}" required>
        <div class="invalid-feedback">Please enter a valid 10-digit contact number.</div>
      </div>

      <div>
        <label for="state" class="form-label">State</label>
        <input type="text" name="state" id="state" class="form-control" placeholder="Enter state" required>
        <div class="invalid-feedback">State is required.</div>
      </div>

      <div>
        <label for="country" class="form-label">Country</label>
        <input type="text" name="country" id="country" class="form-control" placeholder="Enter country" required>
        <div class="invalid-feedback">Country is required.</div>
      </div>

      <div>
        <label for="password" class="form-label">Password</label>
        <input type="password" name="password" id="password" class="form-control" placeholder="Enter password" required oninput="checkPasswordStrength(this.value)">
        <div class="password-strength mt-1" id="strengthBar"></div>
        <small id="passwordMessage" class="password-strength-message"></small>
        <div class="invalid-feedback">Password must be strong.</div>
      </div>

      <button type="submit" class="btn btn-primary">Submit</button>
      <a href="#" onclick="navigateToUsers(event)" class="btn btn-outline-primary">📋 View Submitted Users</a>
      <p id="routeMessage"></p>
    </form>
  </div>

  <div class="footer-section">
    <p>© <%= new Date().getFullYear() %> User Submission Portal</p>
    <div class="nav">
      <a href="/privacy">Privacy</a>
      <a href="/terms">Terms</a>
      <a href="/contact">Contact</a>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    function checkPasswordStrength(password) {
      const strengthBar = document.getElementById("strengthBar");
      const message = document.getElementById("passwordMessage");
      strengthBar.className = "password-strength";

      const regex = {
        lower: /[a-z]/,
        upper: /[A-Z]/,
        number: /[0-9]/,
        special: /[^A-Za-z0-9]/
      };

      let strength = 0;
      if (password.length >= 8) strength++;
      if (regex.lower.test(password)) strength++;
      if (regex.upper.test(password)) strength++;
      if (regex.number.test(password)) strength++;
      if (regex.special.test(password)) strength++;

      if (strength <= 2) {
        strengthBar.classList.add("password-weak");
        message.textContent = "❌ Weak password";
        message.style.color = "#ef4444";
      } else if (strength === 3 || strength === 4) {
        strengthBar.classList.add("password-medium");
        message.textContent = "⚠️ Medium strength password";
        message.style.color = "#f97316";
      } else {
        strengthBar.classList.add("password-strong");
        message.textContent = "✅ Strong password";
        message.style.color = "#22c55e";
      }
    }

    document.getElementById('name').addEventListener('input', function () {
      const preview = document.getElementById('namePreview');
      preview.textContent = this.value ? `Hello, ${this.value}` : '';
    });

    function validateEmailRealTime(email) {
      const emailInput = document.getElementById('email');
      const errorDiv = document.getElementById('emailValidationError');
      if (email) {
        $.ajax({
          url: '/api/validate-email',
          method: 'GET',
          data: { email: email },
          success: function(response) {
            console.log("Validation Success:", response);
            if (!response.isValid) {
              errorDiv.textContent = response.message;
              emailInput.classList.add('is-invalid');
              emailInput.classList.remove('is-valid');
            } else {
              errorDiv.textContent = '';
              emailInput.classList.remove('is-invalid');
              emailInput.classList.add('is-valid');
            }
          },
          error: function(xhr, status, error) {
            console.error("Validation Error:", status, error, xhr.responseText);
            errorDiv.textContent = 'Validation failed: ' + (xhr.responseJSON ? xhr.responseJSON.message : 'Server error');
            emailInput.classList.add('is-invalid');
            emailInput.classList.remove('is-valid');
          }
        });
      } else {
        errorDiv.textContent = '';
        emailInput.classList.remove('is-invalid', 'is-valid');
      }
    }

    function validateForm() {
      const form = document.forms["userForm"];
      const name = form["name"].value.trim();
      const email = form["email"].value.trim();
      const dob = form["dob"].value.trim();
      const contact = form["contact"].value.trim();
      const state = form["state"].value.trim();
      const country = form["country"].value.trim();
      const password = form["password"].value;
      const emailValidationError = document.getElementById('emailValidationError').textContent;

      const isStrong = password.length >= 8 &&
                       /[a-z]/.test(password) &&
                       /[A-Z]/.test(password) &&
                       /[0-9]/.test(password) &&
                       /[^A-Za-z0-9]/.test(password);

      const contactPattern = /^[0-9]{10}$/;
      const today = new Date();
      const inputDate = new Date(dob);
      const minDate = new Date(today.getFullYear() - 120, today.getMonth(), today.getDate());

      if (!name || !email || !dob || !contact || !state || !country || !password) {
        alert("All fields must be filled correctly.");
        return false;
      }

      if (inputDate >= today || inputDate < minDate) {
        alert("Please enter a valid date of birth.");
        return false;
      }

      if (!contactPattern.test(contact)) {
        alert("Contact number must be a valid 10-digit number.");
        return false;
      }

      if (!isStrong) {
        alert("Password must be at least 8 characters long and include uppercase, lowercase, number, and special character.");
        return false;
      }

      if (emailValidationError) {
        alert(emailValidationError);
        return false;
      }

      return true;
    }

    function navigateToUsers(event) {
      event.preventDefault();
      window.location.href = "/users";
    }

    (() => {
      'use strict';
      const forms = document.querySelectorAll('.needs-validation');
      Array.from(forms).forEach(form => {
        form.addEventListener('submit', event => {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    })();
  </script>
</body>
</html>